#[cfg(feature = "std")]
use super::ReadMatcher;

use super::{matchers, Matcher, Type};

#[derive(Debug, Copy, Clone, Eq, PartialEq)]
pub enum MatcherType {
    App,
    Archive,
    Audio,
    Book,
    Doc,
    Font,
    Image,
    Text,
    Video,
    Custom,
}

// This is needed until function pointers can be used in `const fn`.
// See trick and discussion at https://github.com/rust-lang/rust/issues/63997#issuecomment-616666309
#[repr(transparent)]
#[derive(Copy, Clone)]
pub struct WrapMatcher(pub Matcher);

#[cfg(feature = "std")]
#[repr(transparent)]
#[derive(Copy, Clone)]
pub struct WrapReadMatcher(pub ReadMatcher);

macro_rules! matcher_map {
    ($(($mtype:expr, $mime_type:literal, $extension:literal, $matcher:expr, $read_matcher:expr)),*) => {
        #[cfg(feature = "std")]
        pub const MATCHER_MAP: &[Type] = &[
            $(Type::new_static($mtype, $mime_type, $extension, WrapMatcher($matcher), $read_matcher),)*
        ];
        #[cfg(not(feature = "std"))]
        pub const MATCHER_MAP: &[Type] = &[
            $(Type::new_static($mtype, $mime_type, $extension, WrapMatcher($matcher)),)*
        ];
    };
}

// Order: Application, Image, Video, Audio, Font, Document, Archive, Text.
// The above order should be preserved when adding new types since
// it may affect match result and/or performances.
matcher_map!(
    // Application
    (
        MatcherType::App,
        "application/wasm",
        "wasm",
        matchers::app::is_wasm,
        Some(WrapReadMatcher(matchers::app::is_wasm_read))
    ),
    (
        MatcherType::App,
        "application/x-executable",
        "elf",
        matchers::app::is_elf,
        Some(WrapReadMatcher(matchers::app::is_elf_read))
    ),
    (
        MatcherType::App,
        "application/vnd.microsoft.portable-executable",
        "exe",
        matchers::app::is_exe,
        Some(WrapReadMatcher(matchers::app::is_exe_read))
    ),
    (
        MatcherType::App,
        "application/vnd.microsoft.portable-executable",
        "dll",
        matchers::app::is_dll,
        Some(WrapReadMatcher(matchers::app::is_dll_read))
    ),
    (
        MatcherType::App,
        "application/java",
        "class",
        matchers::app::is_java,
        Some(WrapReadMatcher(matchers::app::is_java_read))
    ),
    (
        MatcherType::App,
        "application/x-llvm",
        "bc",
        matchers::app::is_llvm,
        Some(WrapReadMatcher(matchers::app::is_llvm_read))
    ),
    (
        MatcherType::App,
        "application/x-mach-binary",
        "mach",
        matchers::app::is_mach,
        Some(WrapReadMatcher(matchers::app::is_mach_read))
    ),
    (
        MatcherType::App,
        "application/vnd.android.dex",
        "dex",
        matchers::app::is_dex,
        Some(WrapReadMatcher(matchers::app::is_dex_read))
    ),
    (
        MatcherType::App,
        "application/vnd.android.dey",
        "dey",
        matchers::app::is_dey,
        Some(WrapReadMatcher(matchers::app::is_dey_read))
    ),
    (
        MatcherType::App,
        "application/x-x509-ca-cert",
        "der",
        matchers::app::is_der,
        Some(WrapReadMatcher(matchers::app::is_der_read))
    ),
    (
        MatcherType::App,
        "application/x-executable",
        "obj",
        matchers::app::is_coff,
        Some(WrapReadMatcher(matchers::app::is_coff_read))
    ),
    (
        MatcherType::App,
        "application/x-x509-ca-cert",
        "pem",
        matchers::app::is_pem,
        Some(WrapReadMatcher( matchers::app::is_pem_read))
    ),
    // Book
    (
        MatcherType::Book,
        "application/epub+zip",
        "epub",
        matchers::book::is_epub,
        Some(WrapReadMatcher(matchers::book::is_epub_read))
    ),
    (
        MatcherType::Book,
        "application/x-mobipocket-ebook",
        "mobi",
        matchers::book::is_mobi,
        Some(WrapReadMatcher(matchers::book::is_mobi_read))
    ),
    // Image
    (
        MatcherType::Image,
        "image/jpeg",
        "jpg",
        matchers::image::is_jpeg,
        Some(WrapReadMatcher(matchers::image::is_jpeg_read))
    ),
    (
        MatcherType::Image,
        "image/jp2",
        "jp2",
        matchers::image::is_jpeg2000,
        Some(WrapReadMatcher(matchers::image::is_jpeg2000_read))
    ),
    (
        MatcherType::Image,
        "image/png",
        "png",
        matchers::image::is_png,
        Some(WrapReadMatcher(matchers::image::is_png_read))
    ),
    (
        MatcherType::Image,
        "image/gif",
        "gif",
        matchers::image::is_gif,
        Some(WrapReadMatcher(matchers::image::is_gif_read))
    ),
    (
        MatcherType::Image,
        "image/webp",
        "webp",
        matchers::image::is_webp,
        Some(WrapReadMatcher(matchers::image::is_webp_read))
    ),
    (
        MatcherType::Image,
        "image/x-canon-cr2",
        "cr2",
        matchers::image::is_cr2,
        Some(WrapReadMatcher(matchers::image::is_cr2_read))
    ),
    (
        MatcherType::Image,
        "image/tiff",
        "tif",
        matchers::image::is_tiff,
        Some(WrapReadMatcher(matchers::image::is_tiff_read))
    ),
    (
        MatcherType::Image,
        "image/bmp",
        "bmp",
        matchers::image::is_bmp,
        Some(WrapReadMatcher(matchers::image::is_bmp_read))
    ),
    (
        MatcherType::Image,
        "image/vnd.ms-photo",
        "jxr",
        matchers::image::is_jxr,
        Some(WrapReadMatcher(matchers::image::is_jxr_read))
    ),
    (
        MatcherType::Image,
        "image/vnd.adobe.photoshop",
        "psd",
        matchers::image::is_psd,
        Some(WrapReadMatcher(matchers::image::is_psd_read))
    ),
    (
        MatcherType::Image,
        "image/vnd.microsoft.icon",
        "ico",
        matchers::image::is_ico,
        Some(WrapReadMatcher(matchers::image::is_ico_read))
    ),
    (
        MatcherType::Image,
        "image/heif",
        "heif",
        matchers::image::is_heif,
        None
    ),
    (
        MatcherType::Image,
        "image/avif",
        "avif",
        matchers::image::is_avif,
        None
    ),
    (
        MatcherType::Image,
        "image/jxl",
        "jxl",
        matchers::image::is_jxl,
        Some(WrapReadMatcher(matchers::image::is_jxl_read))
    ),
    // Video
    (
        MatcherType::Video,
        "video/mp4",
        "mp4",
        matchers::video::is_mp4,
        Some(WrapReadMatcher(matchers::video::is_mp4_read))
    ),
    (
        MatcherType::Video,
        "video/x-m4v",
        "m4v",
        matchers::video::is_m4v,
        Some(WrapReadMatcher(matchers::video::is_m4v_read))
    ),
    (
        MatcherType::Video,
        "video/x-matroska",
        "mkv",
        matchers::video::is_mkv,
        Some(WrapReadMatcher(matchers::video::is_mkv_read))
    ),
    (
        MatcherType::Video,
        "video/webm",
        "webm",
        matchers::video::is_webm,
        Some(WrapReadMatcher(matchers::video::is_webm_read))
    ),
    (
        MatcherType::Video,
        "video/quicktime",
        "mov",
        matchers::video::is_mov,
        Some(WrapReadMatcher(matchers::video::is_mov_read))
    ),
    (
        MatcherType::Video,
        "video/x-msvideo",
        "avi",
        matchers::video::is_avi,
        Some(WrapReadMatcher(matchers::video::is_avi_read))
    ),
    (
        MatcherType::Video,
        "video/x-ms-wmv",
        "wmv",
        matchers::video::is_wmv,
        Some(WrapReadMatcher(matchers::video::is_wmv_read))
    ),
    (
        MatcherType::Video,
        "video/mpeg",
        "mpg",
        matchers::video::is_mpeg,
        Some(WrapReadMatcher(matchers::video::is_mpeg_read))
    ),
    (
        MatcherType::Video,
        "video/x-flv",
        "flv",
        matchers::video::is_flv,
        Some(WrapReadMatcher(matchers::video::is_flv_read))
    ),
    // Audio
    (
        MatcherType::Audio,
        "audio/midi",
        "midi",
        matchers::audio::is_midi,
        Some(WrapReadMatcher(matchers::audio::is_midi_read))
    ),
    (
        MatcherType::Audio,
        "audio/mpeg",
        "mp3",
        matchers::audio::is_mp3,
        Some(WrapReadMatcher(matchers::audio::is_mp3_read))
    ),
    (
        MatcherType::Audio,
        "audio/m4a",
        "m4a",
        matchers::audio::is_m4a,
        Some(WrapReadMatcher(matchers::audio::is_m4a_read))
    ),
    // has to come before ogg
    (
        MatcherType::Audio,
        "audio/opus",
        "opus",
        matchers::audio::is_ogg_opus,
        Some(WrapReadMatcher(matchers::audio::is_ogg_opus_read))
    ),
    (
        MatcherType::Audio,
        "audio/ogg",
        "ogg",
        matchers::audio::is_ogg,
        Some(WrapReadMatcher(matchers::audio::is_ogg_read))
    ),
    (
        MatcherType::Audio,
        "audio/x-flac",
        "flac",
        matchers::audio::is_flac,
        Some(WrapReadMatcher(matchers::audio::is_flac_read))
    ),
    (
        MatcherType::Audio,
        "audio/x-wav",
        "wav",
        matchers::audio::is_wav,
        Some(WrapReadMatcher(matchers::audio::is_wav_read))
    ),
    (
        MatcherType::Audio,
        "audio/amr",
        "amr",
        matchers::audio::is_amr,
        Some(WrapReadMatcher(matchers::audio::is_amr_read))
    ),
    (
        MatcherType::Audio,
        "audio/aac",
        "aac",
        matchers::audio::is_aac,
        Some(WrapReadMatcher(matchers::audio::is_aac_read))
    ),
    (
        MatcherType::Audio,
        "audio/x-aiff",
        "aiff",
        matchers::audio::is_aiff,
        Some(WrapReadMatcher(matchers::audio::is_aiff_read))
    ),
    (
        MatcherType::Audio,
        "audio/x-dsf",
        "dsf",
        matchers::audio::is_dsf,
        Some(WrapReadMatcher(matchers::audio::is_dsf_read))
    ),
    (
        MatcherType::Audio,
        "audio/x-ape",
        "ape",
        matchers::audio::is_ape,
        Some(WrapReadMatcher(matchers::audio::is_ape_read))
    ),
    // Font
    (
        MatcherType::Font,
        "application/font-woff",
        "woff",
        matchers::font::is_woff,
        Some(WrapReadMatcher(matchers::font::is_woff_read))
    ),
    (
        MatcherType::Font,
        "application/font-woff",
        "woff2",
        matchers::font::is_woff2,
        Some(WrapReadMatcher(matchers::font::is_woff2_read))
    ),
    (
        MatcherType::Font,
        "application/font-sfnt",
        "ttf",
        matchers::font::is_ttf,
        Some(WrapReadMatcher(matchers::font::is_ttf_read))
    ),
    (
        MatcherType::Font,
        "application/font-sfnt",
        "otf",
        matchers::font::is_otf,
        Some(WrapReadMatcher(matchers::font::is_otf_read))
    ),
    // Document
    (
        MatcherType::Doc,
        "application/msword",
        "doc",
        matchers::doc::is_doc,
        Some(WrapReadMatcher(matchers::doc::is_doc_read))
    ),
    (
        MatcherType::Doc,
        "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
        "docx",
        matchers::doc::is_docx,
        Some(WrapReadMatcher(matchers::doc::is_docx_read))
    ),
    (
        MatcherType::Doc,
        "application/vnd.ms-excel",
        "xls",
        matchers::doc::is_xls,
        Some(WrapReadMatcher(matchers::doc::is_xls_read))
    ),
    (
        MatcherType::Doc,
        "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
        "xlsx",
        matchers::doc::is_xlsx,
        Some(WrapReadMatcher(matchers::doc::is_xlsx_read))
    ),
    (
        MatcherType::Doc,
        "application/vnd.ms-powerpoint",
        "ppt",
        matchers::doc::is_ppt,
        Some(WrapReadMatcher(matchers::doc::is_ppt_read))
    ),
    (
        MatcherType::Doc,
        "application/vnd.openxmlformats-officedocument.presentationml.presentation",
        "pptx",
        matchers::doc::is_pptx,
        Some(WrapReadMatcher(matchers::doc::is_pptx_read))
    ),
    // OpenDocument
    (
        MatcherType::Doc,
        "application/vnd.oasis.opendocument.text",
        "odt",
        matchers::odf::is_odt,
        Some(WrapReadMatcher(matchers::odf::is_odt_read))
    ),
    (
        MatcherType::Doc,
        "application/vnd.oasis.opendocument.spreadsheet",
        "ods",
        matchers::odf::is_ods,
        Some(WrapReadMatcher(matchers::odf::is_ods_read))
    ),
    (
        MatcherType::Doc,
        "application/vnd.oasis.opendocument.presentation",
        "odp",
        matchers::odf::is_odp,
        Some(WrapReadMatcher(matchers::odf::is_odp_read))
    ),
    // Archive
    (
        MatcherType::Archive,
        "application/epub+zip",
        "epub",
        matchers::archive::is_epub,
        Some(WrapReadMatcher(matchers::archive::is_epub_read))
    ),
    (
        MatcherType::Archive,
        "application/zip",
        "zip",
        matchers::archive::is_zip,
        Some(WrapReadMatcher(matchers::archive::is_zip_read))
    ),
    (
        MatcherType::Archive,
        "application/x-tar",
        "tar",
        matchers::archive::is_tar,
        Some(WrapReadMatcher(matchers::archive::is_tar_read))
    ),
    (
        MatcherType::Archive,
        "application/vnd.rar",
        "rar",
        matchers::archive::is_rar,
        Some(WrapReadMatcher(matchers::archive::is_rar_read))
    ),
    (
        MatcherType::Archive,
        "application/gzip",
        "gz",
        matchers::archive::is_gz,
        Some(WrapReadMatcher(matchers::archive::is_gz_read))
    ),
    (
        MatcherType::Archive,
        "application/x-bzip2",
        "bz2",
        matchers::archive::is_bz2,
        Some(WrapReadMatcher(matchers::archive::is_bz2_read))
    ),
    (
        MatcherType::Archive,
        "application/x-7z-compressed",
        "7z",
        matchers::archive::is_7z,
        Some(WrapReadMatcher(matchers::archive::is_7z_read))
    ),
    (
        MatcherType::Archive,
        "application/x-xz",
        "xz",
        matchers::archive::is_xz,
        Some(WrapReadMatcher(matchers::archive::is_xz_read))
    ),
    (
        MatcherType::Archive,
        "application/pdf",
        "pdf",
        matchers::archive::is_pdf,
        Some(WrapReadMatcher(matchers::archive::is_pdf_read))
    ),
    (
        MatcherType::Archive,
        "application/x-shockwave-flash",
        "swf",
        matchers::archive::is_swf,
        Some(WrapReadMatcher(matchers::archive::is_swf_read))
    ),
    (
        MatcherType::Archive,
        "application/rtf",
        "rtf",
        matchers::archive::is_rtf,
        Some(WrapReadMatcher(matchers::archive::is_rtf_read))
    ),
    (
        MatcherType::Archive,
        "application/octet-stream",
        "eot",
        matchers::archive::is_eot,
        Some(WrapReadMatcher(matchers::archive::is_eot_read))
    ),
    (
        MatcherType::Archive,
        "application/postscript",
        "ps",
        matchers::archive::is_ps,
        Some(WrapReadMatcher(matchers::archive::is_ps_read))
    ),
    (
        MatcherType::Archive,
        "application/vnd.sqlite3",
        "sqlite",
        matchers::archive::is_sqlite,
        Some(WrapReadMatcher(matchers::archive::is_sqlite_read))
    ),
    (
        MatcherType::Archive,
        "application/x-nintendo-nes-rom",
        "nes",
        matchers::archive::is_nes,
        Some(WrapReadMatcher(matchers::archive::is_nes_read))
    ),
    (
        MatcherType::Archive,
        "application/x-google-chrome-extension",
        "crx",
        matchers::archive::is_crx,
        Some(WrapReadMatcher(matchers::archive::is_crx_read))
    ),
    (
        MatcherType::Archive,
        "application/vnd.ms-cab-compressed",
        "cab",
        matchers::archive::is_cab,
        Some(WrapReadMatcher(matchers::archive::is_cab_read))
    ),
    (
        MatcherType::Archive,
        "application/vnd.debian.binary-package",
        "deb",
        matchers::archive::is_deb,
        Some(WrapReadMatcher(matchers::archive::is_deb_read))
    ),
    (
        MatcherType::Archive,
        "application/x-unix-archive",
        "ar",
        matchers::archive::is_ar,
        Some(WrapReadMatcher(matchers::archive::is_ar_read))
    ),
    (
        MatcherType::Archive,
        "application/x-compress",
        "Z",
        matchers::archive::is_z,
        Some(WrapReadMatcher(matchers::archive::is_z_read))
    ),
    (
        MatcherType::Archive,
        "application/x-lzip",
        "lz",
        matchers::archive::is_lz,
        Some(WrapReadMatcher(matchers::archive::is_lz_read))
    ),
    (
        MatcherType::Archive,
        "application/x-rpm",
        "rpm",
        matchers::archive::is_rpm,
        Some(WrapReadMatcher(matchers::archive::is_rpm_read))
    ),
    (
        MatcherType::Archive,
        "application/dicom",
        "dcm",
        matchers::archive::is_dcm,
        Some(WrapReadMatcher(matchers::archive::is_dcm_read))
    ),
    (
        MatcherType::Archive,
        "application/zstd",
        "zst",
        matchers::archive::is_zst,
        Some(WrapReadMatcher(matchers::archive::is_zst_read))
    ),
    (
        MatcherType::Archive,
        "application/x-ole-storage",
        "msi",
        matchers::archive::is_msi,
        Some(WrapReadMatcher(matchers::archive::is_msi_read))
    ),
    // Text
    (
        MatcherType::Text,
        "text/html",
        "html",
        matchers::text::is_html,
        Some(WrapReadMatcher(matchers::text::is_html_read))
    ),
    (
        MatcherType::Text,
        "text/xml",
        "xml",
        matchers::text::is_xml,
        Some(WrapReadMatcher(matchers::text::is_xml_read))
    ),
    (
        MatcherType::Text,
        "text/x-shellscript",
        "sh",
        matchers::text::is_shellscript,
        Some(WrapReadMatcher(matchers::text::is_shellscript_read))
    )
);
